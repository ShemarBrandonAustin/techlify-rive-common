#ifndef TAFFY_H_
#define TAFFY_H_

// Warning, this file is autogenerated by cbindgen. Don't modify this manually.

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

enum TaffyAlignContent
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyAlignContent_None,
    TaffyAlignContent_Start,
    TaffyAlignContent_End,
    TaffyAlignContent_FlexStart,
    TaffyAlignContent_FlexEnd,
    TaffyAlignContent_Center,
    TaffyAlignContent_Stretch,
    TaffyAlignContent_SpaceBetween,
    TaffyAlignContent_SpaceEvenly,
    TaffyAlignContent_SpaceAround,
};
#ifndef __cplusplus
typedef uint8_t TaffyAlignContent;
#endif // __cplusplus

enum TaffyAlignItems
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyAlignItems_None,
    TaffyAlignItems_Start,
    TaffyAlignItems_End,
    TaffyAlignItems_FlexStart,
    TaffyAlignItems_FlexEnd,
    TaffyAlignItems_Center,
    TaffyAlignItems_Baseline,
    TaffyAlignItems_Stretch,
};
#ifndef __cplusplus
typedef uint8_t TaffyAlignItems;
#endif // __cplusplus

enum TaffyDisplay
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyDisplay_Flex,
    TaffyDisplay_Grid,
    TaffyDisplay_None,
};
#ifndef __cplusplus
typedef uint8_t TaffyDisplay;
#endif // __cplusplus

enum TaffyFlexDirection
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyFlexDirection_Row,
    TaffyFlexDirection_Column,
    TaffyFlexDirection_RowReverse,
    TaffyFlexDirection_ColumnReverse,
};
#ifndef __cplusplus
typedef uint8_t TaffyFlexDirection;
#endif // __cplusplus

enum TaffyFlexWrap
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyFlexWrap_NoWrap,
    TaffyFlexWrap_Wrap,
    TaffyFlexWrap_WrapReverse,
};
#ifndef __cplusplus
typedef uint8_t TaffyFlexWrap;
#endif // __cplusplus

enum TaffyGridAutoFlow
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyGridAutoFlow_Row,
    TaffyGridAutoFlow_Column,
    TaffyGridAutoFlow_RowDense,
    TaffyGridAutoFlow_ColumnDense,
};
#ifndef __cplusplus
typedef uint8_t TaffyGridAutoFlow;
#endif // __cplusplus

enum TaffyOverflow
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyOverflow_Visible,
    TaffyOverflow_Hidden,
    TaffyOverflow_Scroll,
};
#ifndef __cplusplus
typedef uint8_t TaffyOverflow;
#endif // __cplusplus

enum TaffyPosition
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyPosition_Relative,
    TaffyPosition_Absolute,
};
#ifndef __cplusplus
typedef uint8_t TaffyPosition;
#endif // __cplusplus

typedef struct Taffy Taffy;

typedef struct TaffyPoint_Overflow
{
    TaffyOverflow x;
    TaffyOverflow y;
} TaffyPoint_Overflow;

enum TaffyLengthPercentageAuto_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyLengthPercentageAuto_Length,
    TaffyLengthPercentageAuto_Percent,
    TaffyLengthPercentageAuto_Auto,
};
#ifndef __cplusplus
typedef uint8_t TaffyLengthPercentageAuto_Tag;
#endif // __cplusplus

typedef struct TaffyLengthPercentageAuto
{
    TaffyLengthPercentageAuto_Tag tag;
    union
    {
        struct
        {
            float length;
        };
        struct
        {
            float percent;
        };
    };
} TaffyLengthPercentageAuto;

typedef struct TaffyRect_LengthPercentageAuto
{
    struct TaffyLengthPercentageAuto left;
    struct TaffyLengthPercentageAuto right;
    struct TaffyLengthPercentageAuto top;
    struct TaffyLengthPercentageAuto bottom;
} TaffyRect_LengthPercentageAuto;

enum TaffyDimension_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyDimension_Length,
    TaffyDimension_Percent,
    TaffyDimension_Auto,
};
#ifndef __cplusplus
typedef uint8_t TaffyDimension_Tag;
#endif // __cplusplus

typedef struct TaffyDimension
{
    TaffyDimension_Tag tag;
    union
    {
        struct
        {
            float length;
        };
        struct
        {
            float percent;
        };
    };
} TaffyDimension;

typedef struct TaffySize_Dimension
{
    struct TaffyDimension width;
    struct TaffyDimension height;
} TaffySize_Dimension;

enum TaffyOption_f32_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyOption_f32_Some_f32,
    TaffyOption_f32_None_f32,
};
#ifndef __cplusplus
typedef uint8_t TaffyOption_f32_Tag;
#endif // __cplusplus

typedef struct TaffyOption_f32
{
    TaffyOption_f32_Tag tag;
    union
    {
        struct
        {
            float some;
        };
    };
} TaffyOption_f32;

enum TaffyLengthPercentage_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyLengthPercentage_Length,
    TaffyLengthPercentage_Percent,
};
#ifndef __cplusplus
typedef uint8_t TaffyLengthPercentage_Tag;
#endif // __cplusplus

typedef struct TaffyLengthPercentage
{
    TaffyLengthPercentage_Tag tag;
    union
    {
        struct
        {
            float length;
        };
        struct
        {
            float percent;
        };
    };
} TaffyLengthPercentage;

typedef struct TaffyRect_LengthPercentage
{
    struct TaffyLengthPercentage left;
    struct TaffyLengthPercentage right;
    struct TaffyLengthPercentage top;
    struct TaffyLengthPercentage bottom;
} TaffyRect_LengthPercentage;

typedef TaffyAlignItems TaffyAlignSelf;

typedef TaffyAlignContent TaffyJustifyContent;

typedef struct TaffySize_LengthPercentage
{
    struct TaffyLengthPercentage width;
    struct TaffyLengthPercentage height;
} TaffySize_LengthPercentage;

enum TaffyMinTrackSizingFunction_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyMinTrackSizingFunction_Fixed,
    TaffyMinTrackSizingFunction_MinContent,
    TaffyMinTrackSizingFunction_MaxContent,
    TaffyMinTrackSizingFunction_Auto,
};
#ifndef __cplusplus
typedef uint8_t TaffyMinTrackSizingFunction_Tag;
#endif // __cplusplus

typedef struct TaffyMinTrackSizingFunction
{
    TaffyMinTrackSizingFunction_Tag tag;
    union
    {
        struct
        {
            struct TaffyLengthPercentage fixed;
        };
    };
} TaffyMinTrackSizingFunction;

enum TaffyMaxTrackSizingFunction_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyMaxTrackSizingFunction_Fixed,
    TaffyMaxTrackSizingFunction_MinContent,
    TaffyMaxTrackSizingFunction_MaxContent,
    TaffyMaxTrackSizingFunction_FitContent,
    TaffyMaxTrackSizingFunction_Auto,
    TaffyMaxTrackSizingFunction_Fraction,
};
#ifndef __cplusplus
typedef uint8_t TaffyMaxTrackSizingFunction_Tag;
#endif // __cplusplus

typedef struct TaffyMaxTrackSizingFunction
{
    TaffyMaxTrackSizingFunction_Tag tag;
    union
    {
        struct
        {
            struct TaffyLengthPercentage fixed;
        };
        struct
        {
            struct TaffyLengthPercentage fit_content;
        };
        struct
        {
            float fraction;
        };
    };
} TaffyMaxTrackSizingFunction;

typedef struct TaffyMinMax_MinTrackSizingFunction__MaxTrackSizingFunction
{
    struct TaffyMinTrackSizingFunction min;
    struct TaffyMaxTrackSizingFunction max;
} TaffyMinMax_MinTrackSizingFunction__MaxTrackSizingFunction;

typedef struct TaffyMinMax_MinTrackSizingFunction__MaxTrackSizingFunction
    TaffyNonRepeatedTrackSizingFunction;

enum TaffyGridTrackRepetition_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyGridTrackRepetition_AutoFill,
    TaffyGridTrackRepetition_AutoFit,
    TaffyGridTrackRepetition_Count,
};
#ifndef __cplusplus
typedef uint8_t TaffyGridTrackRepetition_Tag;
#endif // __cplusplus

typedef struct TaffyGridTrackRepetition
{
    TaffyGridTrackRepetition_Tag tag;
    union
    {
        struct
        {
            uint16_t count;
        };
    };
} TaffyGridTrackRepetition;

typedef struct TaffySlice_NonRepeatedTrackSizingFunction
{
    TaffyNonRepeatedTrackSizingFunction* data;
    uintptr_t len;
} TaffySlice_NonRepeatedTrackSizingFunction;

enum TaffyTrackSizingFunction_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyTrackSizingFunction_Single,
    TaffyTrackSizingFunction_Repeat,
};
#ifndef __cplusplus
typedef uint8_t TaffyTrackSizingFunction_Tag;
#endif // __cplusplus

typedef struct TaffyTrackSizingFunction_TaffyRepeat_Body
{
    struct TaffyGridTrackRepetition _0;
    struct TaffySlice_NonRepeatedTrackSizingFunction _1;
} TaffyTrackSizingFunction_TaffyRepeat_Body;

typedef struct TaffyTrackSizingFunction
{
    TaffyTrackSizingFunction_Tag tag;
    union
    {
        struct
        {
            TaffyNonRepeatedTrackSizingFunction single;
        };
        TaffyTrackSizingFunction_TaffyRepeat_Body repeat;
    };
} TaffyTrackSizingFunction;

typedef struct TaffySlice_TrackSizingFunction
{
    struct TaffyTrackSizingFunction* data;
    uintptr_t len;
} TaffySlice_TrackSizingFunction;

typedef struct TaffyGridLine
{
    int16_t _0;
} TaffyGridLine;

enum TaffyGridPlacement_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyGridPlacement_Auto,
    TaffyGridPlacement_Line,
    TaffyGridPlacement_Span,
};
#ifndef __cplusplus
typedef uint8_t TaffyGridPlacement_Tag;
#endif // __cplusplus

typedef struct TaffyGridPlacement
{
    TaffyGridPlacement_Tag tag;
    union
    {
        struct
        {
            struct TaffyGridLine line;
        };
        struct
        {
            uint16_t span;
        };
    };
} TaffyGridPlacement;

typedef struct TaffyLine_GridPlacement
{
    struct TaffyGridPlacement start;
    struct TaffyGridPlacement end;
} TaffyLine_GridPlacement;

typedef struct TaffyStyle
{
    TaffyDisplay display;
    struct TaffyPoint_Overflow overflow;
    float scrollbar_width;
    TaffyPosition position;
    struct TaffyRect_LengthPercentageAuto inset;
    struct TaffySize_Dimension size;
    struct TaffySize_Dimension min_size;
    struct TaffySize_Dimension max_size;
    struct TaffyOption_f32 aspect_ratio;
    struct TaffyRect_LengthPercentageAuto margin;
    struct TaffyRect_LengthPercentage padding;
    struct TaffyRect_LengthPercentage border;
    TaffyAlignItems align_items;
    TaffyAlignSelf align_self;
    TaffyAlignItems justify_items;
    TaffyAlignSelf justify_self;
    TaffyAlignContent align_content;
    TaffyJustifyContent justify_content;
    struct TaffySize_LengthPercentage gap;
    TaffyFlexDirection flex_direction;
    TaffyFlexWrap flex_wrap;
    struct TaffyDimension flex_basis;
    float flex_grow;
    float flex_shrink;
    struct TaffySlice_TrackSizingFunction grid_template_rows;
    struct TaffySlice_TrackSizingFunction grid_template_columns;
    struct TaffySlice_NonRepeatedTrackSizingFunction grid_auto_rows;
    struct TaffySlice_NonRepeatedTrackSizingFunction grid_auto_columns;
    TaffyGridAutoFlow grid_auto_flow;
    struct TaffyLine_GridPlacement grid_row;
    struct TaffyLine_GridPlacement grid_column;
} TaffyStyle;

typedef struct TaffyUnit
{

} TaffyUnit;

typedef struct TaffyNodeId
{
    uint64_t _0;
} TaffyNodeId;

enum TaffyError_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyError_ChildIndexOutOfBounds,
    TaffyError_InvalidParentNode,
    TaffyError_InvalidChildNode,
    TaffyError_InvalidInputNode,
    TaffyError_NullPointer,
};
#ifndef __cplusplus
typedef uint8_t TaffyError_Tag;
#endif // __cplusplus

typedef struct TaffyError_TaffyChildIndexOutOfBounds_Body
{
    struct TaffyNodeId parent;
    uintptr_t child_index;
    uintptr_t child_count;
} TaffyError_TaffyChildIndexOutOfBounds_Body;

typedef struct TaffyError
{
    TaffyError_Tag tag;
    union
    {
        TaffyError_TaffyChildIndexOutOfBounds_Body child_index_out_of_bounds;
        struct
        {
            struct TaffyNodeId invalid_parent_node;
        };
        struct
        {
            struct TaffyNodeId invalid_child_node;
        };
        struct
        {
            struct TaffyNodeId invalid_input_node;
        };
    };
} TaffyError;

enum TaffyResult_Unit_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyResult_Unit_Ok_Unit,
    TaffyResult_Unit_Err_Unit,
};
#ifndef __cplusplus
typedef uint8_t TaffyResult_Unit_Tag;
#endif // __cplusplus

typedef struct TaffyResult_Unit
{
    TaffyResult_Unit_Tag tag;
    union
    {
        struct
        {
            struct TaffyUnit ok;
        };
        struct
        {
            struct TaffyError err;
        };
    };
} TaffyResult_Unit;

enum TaffyResult_NodeId_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyResult_NodeId_Ok_NodeId,
    TaffyResult_NodeId_Err_NodeId,
};
#ifndef __cplusplus
typedef uint8_t TaffyResult_NodeId_Tag;
#endif // __cplusplus

typedef struct TaffyResult_NodeId
{
    TaffyResult_NodeId_Tag tag;
    union
    {
        struct
        {
            struct TaffyNodeId ok;
        };
        struct
        {
            struct TaffyError err;
        };
    };
} TaffyResult_NodeId;

typedef struct TaffySlice_NodeId
{
    struct TaffyNodeId* data;
    uintptr_t len;
} TaffySlice_NodeId;

enum TaffyResult_usize_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyResult_usize_Ok_usize,
    TaffyResult_usize_Err_usize,
};
#ifndef __cplusplus
typedef uint8_t TaffyResult_usize_Tag;
#endif // __cplusplus

typedef struct TaffyResult_usize
{
    TaffyResult_usize_Tag tag;
    union
    {
        struct
        {
            uintptr_t ok;
        };
        struct
        {
            struct TaffyError err;
        };
    };
} TaffyResult_usize;

typedef struct TaffySize_f32
{
    float width;
    float height;
} TaffySize_f32;

typedef struct TaffyPoint_f32
{
    float x;
    float y;
} TaffyPoint_f32;

typedef struct TaffyLayout
{
    uint32_t order;
    struct TaffySize_f32 size;
    struct TaffyPoint_f32 location;
} TaffyLayout;

enum TaffyResult_Layout_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyResult_Layout_Ok_Layout,
    TaffyResult_Layout_Err_Layout,
};
#ifndef __cplusplus
typedef uint8_t TaffyResult_Layout_Tag;
#endif // __cplusplus

typedef struct TaffyResult_Layout
{
    TaffyResult_Layout_Tag tag;
    union
    {
        struct
        {
            struct TaffyLayout ok;
        };
        struct
        {
            struct TaffyError err;
        };
    };
} TaffyResult_Layout;

enum TaffyAvailableSpace_Tag
#ifdef __cplusplus
    : uint8_t
#endif // __cplusplus
{
    TaffyAvailableSpace_Definite,
    TaffyAvailableSpace_MinContent,
    TaffyAvailableSpace_MaxContent,
};
#ifndef __cplusplus
typedef uint8_t TaffyAvailableSpace_Tag;
#endif // __cplusplus

typedef struct TaffyAvailableSpace
{
    TaffyAvailableSpace_Tag tag;
    union
    {
        struct
        {
            float definite;
        };
    };
} TaffyAvailableSpace;

typedef struct TaffySize_AvailableSpace
{
    struct TaffyAvailableSpace width;
    struct TaffyAvailableSpace height;
} TaffySize_AvailableSpace;

typedef struct TaffySize_Option_f32
{
    struct TaffyOption_f32 width;
    struct TaffyOption_f32 height;
} TaffySize_Option_f32;

#ifdef __cplusplus
extern "C"
{
#endif // __cplusplus

    struct Taffy* taffy_new(void);

    struct Taffy* taffy_with_capacity(uintptr_t capacity);

    void taffy_release(struct Taffy* taffy);

    struct TaffyStyle taffy_style_default(void);

    struct TaffyResult_Unit taffy_enable_rounding(struct Taffy* taffy);

    struct TaffyResult_Unit taffy_disable_rounding(struct Taffy* taffy);

    struct TaffyResult_NodeId taffy_new_leaf(struct Taffy* taffy, struct TaffyStyle layout);

    struct TaffyResult_NodeId taffy_new_leaf_with_context(struct Taffy* taffy,
                                                          struct TaffyStyle layout,
                                                          void* context);

    struct TaffyResult_NodeId taffy_new_with_children(struct Taffy* taffy,
                                                      struct TaffyStyle layout,
                                                      struct TaffySlice_NodeId children);

    struct TaffyResult_Unit taffy_clear(struct Taffy* taffy);

    struct TaffyResult_NodeId taffy_remove(struct Taffy* taffy, struct TaffyNodeId node);

    struct TaffyResult_Unit taffy_set_node_context(struct Taffy* taffy,
                                                   struct TaffyNodeId node,
                                                   void* context);

    struct TaffyResult_Unit taffy_add_child(struct Taffy* taffy,
                                            struct TaffyNodeId parent,
                                            struct TaffyNodeId child);

    struct TaffyResult_Unit taffy_set_children(struct Taffy* taffy,
                                               struct TaffyNodeId parent,
                                               struct TaffySlice_NodeId children);

    struct TaffyResult_NodeId taffy_remove_child(struct Taffy* taffy,
                                                 struct TaffyNodeId parent,
                                                 struct TaffyNodeId child);

    struct TaffyResult_NodeId taffy_remove_child_at_index(struct Taffy* taffy,
                                                          struct TaffyNodeId parent,
                                                          uintptr_t child_index);

    struct TaffyResult_NodeId taffy_replace_child_at_index(struct Taffy* taffy,
                                                           struct TaffyNodeId parent,
                                                           uintptr_t child_index,
                                                           struct TaffyNodeId new_child);

    struct TaffyResult_NodeId taffy_child_at_index(struct Taffy* taffy,
                                                   struct TaffyNodeId parent,
                                                   uintptr_t child_index);

    struct TaffyResult_usize taffy_child_count(struct Taffy* taffy, struct TaffyNodeId parent);

    struct TaffyResult_Unit taffy_children(struct Taffy* taffy,
                                           struct TaffyNodeId parent,
                                           struct TaffyNodeId* children_buffer);

    struct TaffyResult_Unit taffy_set_style(struct Taffy* taffy,
                                            struct TaffyNodeId node,
                                            struct TaffyStyle style);

    struct TaffyResult_Layout taffy_layout(struct Taffy* taffy, struct TaffyNodeId node);

    struct TaffyResult_Unit taffy_mark_dirty(struct Taffy* taffy, struct TaffyNodeId node);

    struct TaffyResult_Unit taffy_compute_layout(struct Taffy* taffy,
                                                 struct TaffyNodeId node,
                                                 struct TaffySize_AvailableSpace available_space);

    struct TaffyResult_Unit taffy_compute_layout_with_measure(
        struct Taffy* taffy,
        struct TaffyNodeId node,
        struct TaffySize_AvailableSpace available_space,
        struct TaffySize_f32 (*measure_function)(struct TaffySize_Option_f32,
                                                 struct TaffySize_AvailableSpace,
                                                 struct TaffyNodeId,
                                                 void*));

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus

#endif /* TAFFY_H_ */
